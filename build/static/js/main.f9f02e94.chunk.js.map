{"version":3,"sources":["components/header.js","components/userList.js","actions/UserActions.js","actions/types.js","components/userForm.js","App.js","serviceWorker.js","reducers/UserReducer.js","reducers/index.js","index.js"],"names":["App","className","Column","Table","ColumnGroup","UserList","props","data","entries","console","log","rowKey","id","dataSource","title","dataIndex","key","render","text","record","style","color","cursor","onClick","showModal","editUser","EditUserData","type","deleteUser","toggleModal","userInputForm","payload","prop","value","submitForm","UserForm","dispatch","useDispatch","useSelector","state","user","firstName","lastName","age","birthday","hobby","userData","edit","visible","handleCancel","handleChange","event","target","name","DeleteUser","aria-hidden","onCancel","footer","onChange","placeholder","preventDefault","Boolean","window","location","hostname","match","INITIAL_STATE","combineReducers","action","filter","store","createStore","reducers","composeWithDevTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9f02e94.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\nfunction App() {\r\n   \r\n  return (\r\n    <div className=\"App\">\r\n     <header className=\"header\">\r\n        USERS MANAGER APP\r\n     </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Table, Divider } from 'antd';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nfunction UserList(props) {\r\n    let data\r\n    if (props.entries) {\r\n        data = props.entries\r\n    } else {\r\n        console.log('no entries')\r\n    }\r\n\r\n    const EditUserData = data => {\r\n        props.showModal();\r\n        props.editUser(data)\r\n    }\r\n\r\n    const deleteUser = data => {\r\n        props.deleteUser(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Table rowKey={data => data.id} dataSource={data}>\r\n                <ColumnGroup title=\"Name\">\r\n                    <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n                    <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\r\n                </ColumnGroup>\r\n                <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\r\n                <Column title=\"Birthday\" dataIndex=\"birthday\" key=\"birthday\" />\r\n                <Column title=\"Hobby\" dataIndex=\"hobby\" key=\"hobby\" />\r\n\r\n                <Column\r\n                    title=\"Action\"\r\n                    key=\"action\"\r\n                    render={(text, record) => (\r\n                        <span>\r\n                            <span style={{ color: \"#3AA5FF\", cursor: \"pointer\" }} onClick={()=>EditUserData(record)}>Edit </span>\r\n                            <Divider type=\"vertical\" />\r\n                            <span onClick={()=>deleteUser(record.id)} style={{ color: '#3AA5FF', cursor: \"pointer\" }}>Delete</span>\r\n                        </span>\r\n                    )}\r\n                />\r\n            </Table> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;\r\n","import { USER_FORM, USER_SUBMIT, DELETE_USER, EDIT_USER, TOGGLE_MODAL } from './types'\r\n\r\nexport const toggleModal = () => {\r\n    return {\r\n        type: TOGGLE_MODAL\r\n    }\r\n}\r\n\r\nexport const userInputForm = ({ prop, value }) => {\r\n    return {\r\n        type: USER_FORM,\r\n        payload: { prop, value }\r\n    }\r\n}\r\n\r\nexport const submitForm = (data) => {\r\n    return {\r\n        type: USER_SUBMIT,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deleteUser = (data) => {\r\n    return {\r\n        type: DELETE_USER,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const editUser = (data) => {\r\n    console.log(data)\r\n    return {\r\n        type: EDIT_USER,\r\n        payload: data\r\n    }\r\n}","export const TOGGLE_MODAL = 'toggle_modal'\r\nexport const USER_FORM = 'user_form'\r\nexport const USER_SUBMIT = 'user_submit'\r\nexport const DELETE_USER = 'delete_user'\r\nexport const EDIT_USER = 'edit_user'\r\n","import React from 'react';\r\nimport UserList from './userList';\r\nimport { Modal, Button, Input } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userInputForm, submitForm, deleteUser, editUser, toggleModal } from '../actions';\r\n\r\nfunction UserForm() {\r\n    const dispatch = useDispatch()\r\n    const { firstName, lastName, age, birthday, hobby, id, userData, edit, visible } = useSelector(state => state.user)\r\n    \r\n    const showModal = data => {\r\n        dispatch(toggleModal() )       \r\n    }\r\n\r\n    const handleCancel = data => {\r\n        dispatch(toggleModal() )       \r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        console.log(name, value)\r\n        dispatch(userInputForm({ prop: name, value }))                \r\n    }\r\n    \r\n    const DeleteUser = data => {\r\n        dispatch(deleteUser(data) )       \r\n    }\r\n\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n        \r\n        if (edit===true){\r\n            DeleteUser(id)\r\n        }\r\n\r\n        dispatch(submitForm({ id, firstName, lastName, age, birthday, hobby }))                \r\n    }\r\n\r\n    const EditUser = data => {\r\n        dispatch(editUser(data) )                \r\n    }\r\n\r\n        return (\r\n            <div>\r\n                 <UserList showModal={showModal} editUser={EditUser} deleteUser={DeleteUser} entries={userData} />\r\n\r\n                <div>\r\n                    <Button className=\"toggleForm\" onClick={showModal}>\r\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Modal\r\n                        visible={visible}\r\n                        title=\"User Data Form\"\r\n                        onCancel={handleCancel}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={handleCancel}>\r\n                                Return\r\n                            </Button>\r\n                        ]}\r\n                    >\r\n                        <form>\r\n                            <Input type=\"text\" name=\"firstName\" value={firstName} onChange={handleChange} placeholder=\"first name\" /> <br /> <br/>\r\n                            <Input type=\"text\" name=\"lastName\" value={lastName} onChange={handleChange} placeholder=\"last name\" /> <br /> <br/>\r\n                            <Input type=\"number\" name=\"age\" value={age} onChange={handleChange} placeholder=\"age\" /> <br /> <br/>\r\n                            <Input type=\"date\" name=\"birthday\" value={birthday} onChange={handleChange} placeholder=\"birthday\" /> <br /> <br/>\r\n                            <Input name=\"hobby\" value={hobby}  onChange={handleChange} type=\"text\" placeholder=\"Hobby\" /> <br /> <br/>\r\n                            <Input type=\"submit\" className=\"inputButton\" onClick={onSubmit} value={(edit===false)? 'Add': 'Edit'} />\r\n\r\n                        </form>\r\n                    </Modal>\r\n                </div> \r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default UserForm;\r\n\r\n\r\n","import React from 'react';\nimport Header from './components/header'\nimport UserForm from './components/userForm'\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { USER_FORM, USER_SUBMIT, DELETE_USER, EDIT_USER, TOGGLE_MODAL } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    visible: false,\r\n    firstName: '',\r\n    lastName: '',\r\n    age: '',\r\n    birthday: '',\r\n    hobby: '',\r\n    id: 0,\r\n    userData: [],\r\n    edit: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_MODAL:\r\n            return { ...state, visible: !state.visible }\r\n        case USER_FORM:\r\n            return { ...state, [action.payload.prop]: action.payload.value }\r\n        case USER_SUBMIT:\r\n            return { ...state, ...INITIAL_STATE, id: state.id+1, userData: [ ...state.userData, action.payload ]  }\r\n        case DELETE_USER: \r\n            return { ...state, userData: [ ...state.userData.filter((user) => {return user.id !== action.payload}) ] }\r\n        case EDIT_USER:\r\n            return { ...state, edit: true, ...action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport UserReducer from './UserReducer'\r\n\r\nexport default combineReducers({\r\n    user: UserReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore( reducers, composeWithDevTools( ) )\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}