{"version":3,"sources":["components/header.js","components/userList.js","actions/types.js","actions/UserActions.js","components/userForm.js","App.js","serviceWorker.js","reducers/UserReducer.js","reducers/index.js","sagas/index.js","index.js"],"names":["App","className","Column","Table","ColumnGroup","UserList","props","data","entries","console","log","rowKey","id","dataSource","title","dataIndex","key","render","text","record","onClick","deleteUser","style","color","cursor","USER_CREATED","USER_DELETED","toggleModal","type","userInputForm","payload","prop","value","add_User","user","update_User","delete_User","userId","UserForm","dispatch","useDispatch","useSelector","state","firstName","lastName","age","birthday","hobby","userData","edit","visible","showModal","handleCancel","handleChange","event","target","name","aria-hidden","onCancel","footer","onChange","placeholder","preventDefault","Boolean","window","location","hostname","match","INITIAL_STATE","combineReducers","action","filter","updatedUserSaga","createUserSaga","deleteSaga","rootSaga","database","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","addUser","axios","post","then","response","catch","error","delete","createEventChannel","listener","eventChannel","emit","ref","on","val","off","updateChannel","take","put","call","fork","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bc2f2b9.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\nfunction App() {\r\n   \r\n  return (\r\n    <div className=\"App\">\r\n     <header className=\"header\">\r\n        USERS MANAGER APP\r\n     </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nfunction UserList(props) {\r\n    let data\r\n    if (props.entries) {\r\n        data = props.entries\r\n    } else {\r\n        console.log('no entries')\r\n    }\r\n\r\n    const deleteUser = data => {\r\n        props.deleteUser(data)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <Table rowKey={data => data.id} dataSource={data}>\r\n                <Column title=\"ID\" dataIndex=\"id\" key=\"id\" />                 \r\n                <ColumnGroup title=\"Name\">\r\n                    <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n                    <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\r\n                </ColumnGroup>\r\n                <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\r\n                <Column title=\"Birthday\" dataIndex=\"birthday\" key=\"birthday\" />\r\n                <Column title=\"Hobby\" dataIndex=\"hobby\" key=\"hobby\" />\r\n\r\n                <Column\r\n                    title=\"Action\"\r\n                    key=\"action\"\r\n                    render={(text, record) => (\r\n                        <span>\r\n                            <span onClick={()=>deleteUser(record.id)} style={{ color: '#3AA5FF', cursor: \"pointer\" }}>Delete</span>\r\n                        </span>\r\n                    )}\r\n                />\r\n            </Table> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;\r\n","export const TOGGLE_MODAL = 'toggle_modal'\r\nexport const USER_FORM = 'user_form'\r\nexport const USER_SUBMIT = 'user_submit'\r\nexport const DELETE_USER = 'delete_user'\r\nexport const EDIT_USER = 'edit_user'\r\n\r\n//firebase \r\nexport const USER_CREATED = 'user_created'\r\nexport const USER_UPDATED = 'user_updated'\r\nexport const UPDATE_USER_DATA = 'update_user_data'\r\nexport const USER_DELETED = 'user_deleted'","import { USER_FORM, TOGGLE_MODAL, USER_CREATED, USER_UPDATED,  USER_DELETED } from './types'\r\n\r\nexport const toggleModal = () => {\r\n    return {\r\n        type: TOGGLE_MODAL\r\n    }\r\n}\r\n\r\nexport const userInputForm = ({ prop, value }) => {\r\n    return {\r\n        type: USER_FORM,\r\n        payload: { prop, value }\r\n    }\r\n}\r\n\r\n//firebase\r\nexport const add_User = user => {\r\n     return {\r\n        type: USER_CREATED,\r\n        payload: user\r\n     }\r\n}\r\n\r\nexport const update_User = user => {\r\n     return {\r\n        type: USER_UPDATED,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const delete_User = userId => {\r\n     return {\r\n        type: USER_DELETED,\r\n        payload: userId\r\n     }\r\n}","import React from 'react';\r\nimport UserList from './userList';\r\nimport { Modal, Button, Input } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { userInputForm, toggleModal, add_User, delete_User } from '../actions';\r\n\r\nfunction UserForm() {\r\n    const dispatch = useDispatch()\r\n    const { firstName, lastName, age, birthday, hobby, userData, edit, visible } = useSelector(state => state.user)\r\n    console.log(userData)\r\n    \r\n    const showModal = data => {\r\n        dispatch(toggleModal() )       \r\n    }\r\n\r\n    const handleCancel = data => {\r\n        dispatch(toggleModal() )       \r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        console.log(name, value)\r\n        dispatch(userInputForm({ prop: name, value }))                \r\n    }\r\n    \r\n    const DeleteUser = data => {\r\n        dispatch(delete_User(data))       \r\n    }\r\n\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault()\r\n        \r\n        dispatch(add_User({ firstName, lastName, age, birthday, hobby }))                \r\n    }\r\n\r\n        return (\r\n            <div>\r\n                 <UserList showModal={showModal} deleteUser={DeleteUser} entries={userData} />\r\n\r\n                <div>\r\n                    <Button className=\"toggleForm\" onClick={showModal}>\r\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Modal\r\n                        visible={visible}\r\n                        title=\"User Data Form\"\r\n                        onCancel={handleCancel}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={handleCancel}>\r\n                                Return\r\n                            </Button>\r\n                        ]}\r\n                    >\r\n                        <form>\r\n                            <Input type=\"text\" name=\"firstName\" value={firstName} onChange={handleChange} placeholder=\"first name\" /> <br /> <br/>\r\n                            <Input type=\"text\" name=\"lastName\" value={lastName} onChange={handleChange} placeholder=\"last name\" /> <br /> <br/>\r\n                            <Input type=\"number\" name=\"age\" value={age} onChange={handleChange} placeholder=\"age\" /> <br /> <br/>\r\n                            <Input type=\"date\" name=\"birthday\" value={birthday} onChange={handleChange} placeholder=\"birthday\" /> <br /> <br/>\r\n                            <Input name=\"hobby\" value={hobby}  onChange={handleChange} type=\"text\" placeholder=\"Hobby\" /> <br /> <br/>\r\n                            <Input type=\"submit\" className=\"inputButton\" onClick={onSubmit} value={(edit===false)? 'Add': 'Edit'} />\r\n\r\n                        </form>\r\n                    </Modal>\r\n                </div> \r\n\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default UserForm;\r\n\r\n\r\n","import React from 'react';\nimport Header from './components/header'\nimport UserForm from './components/userForm'\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { USER_FORM, TOGGLE_MODAL, USER_UPDATED, USER_DELETED } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    visible: false,\r\n    firstName: '',\r\n    lastName: '',\r\n    age: '',\r\n    birthday: '',\r\n    hobby: '',\r\n    id: \"\",\r\n    userData: [],\r\n    edit: false\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_MODAL:\r\n            return { ...state, visible: !state.visible }\r\n        case USER_FORM:\r\n            return { ...state, [action.payload.prop]: action.payload.value }\r\n        case USER_UPDATED:\r\n            return { ...state, ...INITIAL_STATE, userData: [ ...state.userData, action.payload ] }\r\n        case USER_DELETED:\r\n            return { ...state, userData: [ ...state.userData.filter((user) => {return user.id !== action.payload}) ] }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport UserReducer from './UserReducer'\r\n\r\nexport default combineReducers({\r\n    user: UserReducer\r\n})","import * as firebase from 'firebase';\r\nimport { USER_CREATED, USER_UPDATED, USER_DELETED } from '../actions/types'\r\nimport { update_User } from '../actions';\r\nimport { put, take, call, fork } from 'redux-saga/effects';\r\nimport { eventChannel } from 'redux-saga';\r\nimport axios from 'axios'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDQx1N-8hKmCOBpU9R6VO6z5OKTIE6FotM\",\r\n    authDomain: \"usermanager-eb1d3.firebaseapp.com\",\r\n    databaseURL: \"https://usermanager-eb1d3.firebaseio.com\",\r\n    projectId: \"usermanager-eb1d3\",\r\n    storageBucket: \"usermanager-eb1d3.appspot.com\",\r\n    messagingSenderId: \"339079121964\",\r\n    appId: \"1:339079121964:web:61db5d641f601219c99589\",\r\n    measurementId: \"G-6WQJN4F70K\"\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nconst database = firebase.database();\r\n\r\nfunction addUser(user) {\r\n    console.log(user)\r\n    axios.post('https://us-central1-usermanager-eb1d3.cloudfunctions.net/app/addUsers', user)\r\n    .then(response => { \r\n        console.log(response)\r\n    })\r\n    .catch(error => {\r\n        console.log(error.response)\r\n    });\r\n}\r\n\r\nfunction deleteUser(userId) {\r\n    axios.delete(`https://us-central1-usermanager-eb1d3.cloudfunctions.net/app/deleteUsers/${userId}`)\r\n      .then(response => { \r\n        console.log(response)\r\n    })\r\n    .catch(error => {\r\n        console.log(error.response)\r\n    });\r\n}\r\n\r\nfunction createEventChannel() {\r\n    const listener = eventChannel(\r\n        emit => {\r\n            database.ref('users')\r\n                .on(\r\n                'child_added',\r\n                data => emit(data.val())\r\n                );\r\n            return () => database.ref('users').off(listener);\r\n        }\r\n    );\r\n\r\n    return listener;\r\n};\r\n\r\nfunction* updatedUserSaga() {\r\n    const updateChannel = createEventChannel();\r\n    while (true) {\r\n        const user = yield take(updateChannel);\r\n        yield put(update_User(user));\r\n    }\r\n}\r\n\r\nfunction* createUserSaga() {\r\n    while (true) {\r\n        const action = yield take(USER_CREATED);\r\n        // console.log(action.payload)\r\n        try {\r\n            yield call(addUser, action.payload);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\n\r\nfunction* deleteSaga() {\r\n    while (true) {\r\n        const action = yield take(USER_DELETED);\r\n        // console.log(action.payload)\r\n        try {\r\n            yield call(deleteUser, action.payload);\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield fork(createUserSaga);\r\n    yield fork(updatedUserSaga);\r\n    yield fork(deleteSaga);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reducers from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas'\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst store = createStore( reducers, compose(applyMiddleware(sagaMiddleware), \r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() ) )\r\n\r\nsagaMiddleware.run(rootSaga)\r\nstore.dispatch({ type: 'HELLO'})\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}