{"version":3,"sources":["components/header.js","components/userList.js","components/userForm.js","App.js","serviceWorker.js","index.js"],"names":["App","className","Column","Table","ColumnGroup","userList","data","this","props","showModal","editUser","deleteUser","entries","console","log","dataSource","title","dataIndex","key","render","text","record","style","color","cursor","onClick","EditUserData","bind","type","Component","userForm","state","loading","visible","firstName","lastName","age","birthday","hobby","edit","userData","setState","handleOk","setTimeout","handleCancel","event","target","name","value","deletedUser","filter","user","preventDefault","prevState","concat","aria-hidden","onOk","onCancel","footer","onChange","handleChange","placeholder","onSubmit","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e18a74b.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\nfunction App() {\r\n   \r\n  return (\r\n    <div className=\"App\">\r\n     <header className=\"header\">\r\n        USERS MANAGER APP\r\n     </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport { Layout, Table, Divider } from 'antd';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nclass userList extends Component {\r\n\r\n    EditUserData(data) {\r\n        this.props.showModal();\r\n        this.props.editUser(data)\r\n    }\r\n\r\n    deleteUser(data) {\r\n        this.props.deleteUser(data)\r\n    }\r\n\r\n    render() {\r\n        let data\r\n        if (this.props.entries) {\r\n            data= this.props.entries\r\n        } else {\r\n            console.log('no entries')\r\n        }\r\n        return (\r\n            <div>\r\n                    <Table dataSource={data}>\r\n                        <ColumnGroup title=\"Name\">\r\n                            <Column title=\"First Name\" dataIndex=\"firstName\" key=\"firstName\" />\r\n                            <Column title=\"Last Name\" dataIndex=\"lastName\" key=\"lastName\" />\r\n                        </ColumnGroup>\r\n                        <Column title=\"Age\" dataIndex=\"age\" key=\"age\" />\r\n                        <Column title=\"Birthday\" dataIndex=\"birthday\" key=\"birthday\" />\r\n                        <Column title=\"Hobby\" dataIndex=\"hobby\" key=\"hobby\" />\r\n                        \r\n                        <Column\r\n                            title=\"Action\"\r\n                            key=\"action\"\r\n                            render={(text, record) => (\r\n                                <span>\r\n                                    <span style={{color: \"#3AA5FF\", cursor: \"pointer\"}} onClick={this.EditUserData.bind(this, record)}>Edit </span>\r\n                                    <Divider type=\"vertical\" />\r\n                                    <span onClick={this.deleteUser.bind(this, record.key)} style={{color: '#3AA5FF', cursor: \"pointer\"}}>Delete</span>\r\n                                </span>\r\n                            )}\r\n                        />\r\n                    </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default userList\r\n","import React, { Component } from 'react'\r\nimport UserList from './userList'\r\nimport { Modal, Button, Input } from 'antd';\r\n\r\nclass userForm extends Component {\r\n    state = {\r\n        loading: false,\r\n        visible: false,\r\n        firstName: '',\r\n        lastName: '',\r\n        age: '',\r\n        birthday: '',\r\n        hobby: '',\r\n        key: 0,\r\n        edit: false,\r\n        userData: []\r\n    };\r\n\r\n    showModal = () => {\r\n        this.setState({\r\n            visible: true,\r\n        });\r\n    };\r\n\r\n    handleOk = () => {\r\n        this.setState({ loading: true });\r\n        setTimeout(() => {\r\n            this.setState({ loading: false, visible: false });\r\n        }, 3000);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({ visible: false });\r\n    };\r\n\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    \r\n    deleteUser(data) {\r\n        const { userData } = this.state;\r\n\r\n        let deletedUser = userData.filter((user) => {\r\n            return user.key !== data\r\n        })\r\n\r\n        this.setState({ userData: deletedUser })\r\n    }\r\n\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault()\r\n        if (this.state.edit){\r\n            this.deleteUser(this.state.key)\r\n        }\r\n        this.setState((prevState) => {\r\n            return {\r\n                key: prevState.key + 1\r\n            }\r\n        })\r\n        const { key, firstName, lastName, age, birthday, hobby } = this.state;\r\n\r\n        let data = { key, firstName, lastName, age, birthday, hobby }\r\n        this.setState((prevState) => {\r\n            return {\r\n                userData: prevState.userData.concat(data),\r\n                firstName: '',\r\n                lastName: '',\r\n                age: '',\r\n                birthday: '',\r\n                hobby: '',\r\n                edit: false\r\n            }\r\n        })\r\n        this.handleCancel()\r\n    }\r\n\r\n    editUser(data) {\r\n        this.setState({\r\n            key: data.key,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            age: data.age,\r\n            birthday: data.birthday,\r\n            hobby: data.hobby,\r\n            edit: true\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { visible, firstName, lastName, age, birthday, hobby, edit } = this.state;\r\n        return (\r\n            <div>\r\n                <UserList showModal={this.showModal.bind(this)} editUser={this.editUser.bind(this)} deleteUser={this.deleteUser.bind(this)} entries={this.state.userData} />\r\n\r\n                <div>\r\n                    <Button className=\"toggleForm\" onClick={this.showModal}>\r\n                        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\r\n                    </Button>\r\n                    <Modal\r\n                        visible={visible}\r\n                        title=\"User Data Form\"\r\n                        onOk={this.handleOk}\r\n                        onCancel={this.handleCancel}\r\n                        footer={[\r\n                            <Button key=\"back\" onClick={this.handleCancel}>\r\n                                Return\r\n                            </Button>\r\n                        ]}\r\n                    >\r\n                        <form>\r\n                            <Input type=\"text\" name=\"firstName\" value={firstName} onChange={this.handleChange.bind(this)} placeholder=\"firt name\" /> <br /> <br/>\r\n                            <Input type=\"text\" name=\"lastName\" value={lastName} onChange={this.handleChange.bind(this)} placeholder=\"last name\" /> <br /> <br/>\r\n                            <Input type=\"number\" name=\"age\" value={age} onChange={this.handleChange.bind(this)} placeholder=\"age\" /> <br /> <br/>\r\n                            <Input type=\"date\" name=\"birthday\" value={birthday} onChange={this.handleChange.bind(this)} placeholder=\"birthday\" /> <br /> <br/>\r\n                            <Input name=\"hobby\" value={hobby} onChange={this.handleChange.bind(this)} type=\"text\" placeholder=\"Hobby\" /> <br /> <br/>\r\n                            <Input type=\"submit\" className=\"inputButton\" onClick={this.onSubmit.bind(this)} value={(edit===false)? 'Add': 'Edit'} />\r\n\r\n                        </form>\r\n                    </Modal>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default userForm","import React from 'react';\nimport Header from './components/header'\nimport UserForm from './components/userForm'\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Header />\n     <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}